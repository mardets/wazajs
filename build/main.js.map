{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/application/controller/application.ts","lib/application/layout/layout.ts","lib/core/config/hash.ts","lib/core/config/location.ts","lib/core/config/path.ts","lib/core/util/helper.ts","lib/provider/http.ts","lib/provider/page.ts","lib/provider/router.ts","www/application.controller.ts","www/application.ts","www/constants.ts","www/home/home.controller.ts","www/home/home.service.ts","www/main.ts","www/pack/pack.controller.ts","www/pack/pack.service.ts","www/resources.ts","www/router.ts","www/view/templates.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { Hash } from '../../core/config/hash';\r\nimport { Path } from '../../core/config/path';\r\nimport { Location } from '../../core/config/location';\r\nimport { Layout } from '../layout/layout';\r\nimport { Helper } from '../../core/util/helper';\r\n\r\nexport class ApplicationController {\r\n  location:Location;\r\n  hash: Hash;\r\n  path: Path;\r\n  resources: any[];\r\n  \r\n  constructor(private layout: Layout) {\r\n    this.resources = [];\r\n\tthis.hash = new Hash();\r\n\tthis.path = new Path();\r\n\tthis.location = new Location();\r\n  }\r\n\r\n  displayLayout(layout: Layout, hashname: string, resource?: any, title?: string, callback?: Function) {\r\n    let layoutToDisplay:any = layout;\r\n\tlet path = '/' + hashname;\r\n\tif(path.charAt(2) === '/') {\r\n\t\tpath = path.substring(2, path.length);\r\n\t}\r\n    layoutToDisplay.setViewLayout(path, title, this.setTemplate || callback, resource);\r\n  }\r\n\r\n  getResources(): any[] {\r\n\treturn this.resources;\r\n  }\r\n  getLayout(): Layout {\r\n\t  return this.layout;\r\n  }\r\n  \r\n  setLayout(layout: Layout) {\r\n\t  this.layout = layout;\r\n  }\r\n  \r\n  render(template: string, title?: string, data?:any) {\r\n    var contentEl = window.document.querySelector('.ui-view');\r\n    contentEl.innerHTML = template;\r\n\twindow.document.querySelector('title').textContent = title;\r\n  }\r\n  \r\n  async observe(resource: ApplicationController, template: string) {\r\n\tlet arrayRoutes = resource.getLayout().getPage().getRoute().getRoutes();\r\n\tlet routeResource = Helper.filter(arrayRoutes, '/' + resource.getLayout().hash.name);\r\n\tif( routeResource === undefined) {\r\n\t\tthis.render('<p>404 page : the resource is not available</p>', '404 error');\r\n\t} else {\r\n\t\tconsole.log(\"Apply the function\");\r\n\t\tif(routeResource.path !== '/') {\r\n\t\t\tvar response:any = await routeResource.handler();\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(response);\r\n\t\tthis.render(template, resource.location.title);\r\n\t\tthis.htmlMarkup('#list',JSON.parse(response));\r\n\t}\r\n  }\r\n  \r\n  setResources(resource: any) {\r\n\tif(resource.getResources !== null) {\r\n\t\tthis.resources[this.resources.length] = resource;\r\n\t}\r\n  }\r\n  \r\n  static reload(layout: Layout, hash: string, title?: string) {\r\n\t\r\n    this.prototype.displayLayout(layout, hash, this, title, this.prototype.setTemplate);\r\n\twindow.location.reload();\r\n  }\r\n  \r\n  setTemplate(template: string, clazz: any, hashname?:string) {\r\n\tlet resources = clazz.instanceBuilder();\r\n\tfor (let i = 0; i < resources.length; i++) {\r\n      if (resources[i].getLayout().hash.name.includes(resources[i].hash.name)) {\r\n\t\tclazz.observe(resources[i], template);\r\n        break;\r\n      }\r\n    }\r\n\treturn;\r\n  }\r\n  \r\n  /**\r\n  * Example case\r\n  */\r\n  htmlMarkup(style: string, data: any) {\r\n\t var markupEl = window.document.querySelector(style); \r\n\t if(style.includes('list')) {\r\n\t\tvar ul = window.document.createElement('ul');\r\n\t\t\r\n\t\tfor (let i=0; i < data.length; i++) {\r\n\t\t\tlet li = window.document.createElement('li');\r\n\t\t\tlet a = window.document.createElement('a');\r\n\t\t\t\r\n\t\t\tli.appendChild(a);\r\n\t\t\ta.textContent = data[i].ref_pack;\r\n\t\t\tul.appendChild(li);\r\n\t\t\tmarkupEl.appendChild(ul);\r\n\t\t}\r\n\t\t\r\n\t }\r\n\t \r\n  }\r\n}","import { PageProvider } from '../../provider/page';\r\nimport { Hash } from '../../core/config/hash';\r\nexport class Layout {\r\n\r\n  layout: string;\r\n  hash: Hash;\r\n  layoutView: string;\r\n\r\n  constructor(private page:  PageProvider) {\r\n\tthis.hash = new Hash();\r\n\tthis.layoutView = '';\r\n  }\r\n\r\n  getViewLayout(): string {\r\n    return this.layoutView;\r\n  }\r\n\r\n  setViewLayout(pathuri: string, title: string, cb?: Function, resource?: any): void {\r\n    \r\n\tlet cacheTpl = this.page.getRoute().getCacheTpl();\r\n\tif (pathuri !== '/') {\r\n\t\t/*let uri = pathuri.substring(1, pathuri.length) + '\\\\' + pathuri.substring(1, pathuri.length);\r\n\t\tif(cacheTpl[uri + '.html'] !== undefined) {\r\n\t\t\tthis.layoutView = cacheTpl[uri + '.html']\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet uri = pathuri.substring(1, pathuri.length) + pathuri.substring(1, pathuri.length);\r\n\t\t\tthis.layoutView = cacheTpl[uri + '.html']\r\n\t\t}*/\r\n\t\tif(pathuri) {\r\n\t\t\tlet _pathuri = pathuri.substring(1, pathuri.length);\r\n\t\t\tlet uri = _pathuri.substr(0, _pathuri.indexOf(\"/\"));\r\n\t\t\t\r\n\t\t\tif(pathuri.includes('create')) {\r\n\t\t\t\tthis.layoutView = cacheTpl[uri + 'create.html'];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(pathuri.includes('update')) {\r\n\t\t\t\tthis.layoutView = cacheTpl[uri + 'edit.html'];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(pathuri.includes('list')) {\r\n\t\t\t\tthis.layoutView = cacheTpl[uri + 'list.html'];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!pathuri.includes('create') && !pathuri.includes('update') && !pathuri.includes('list')) {\r\n\t\t\t\turi += uri;\r\n\t\t\t\tthis.layoutView = cacheTpl[uri + '.html'];\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tthis.layoutView = cacheTpl['layout\\layout.html'];\r\n\t}\r\n\tsetTimeout(() => {\r\n\t\tthis.page.setCacheTpl(pathuri, pathuri.substring(1, pathuri.length), this.layoutView, cb, resource);\r\n\t}, 1100)\r\n\t\r\n  }\r\n\r\n  getPage():  PageProvider {\r\n    return this.page;\r\n  }\r\n\r\n}","export class Hash {\r\n\t\r\n\tname: string;\r\n\twindow: any;\r\n\t\r\n\tconstructor() {\r\n\t\tthis.name = window.location.hash.substr(2, window.location.hash.length - 1);\r\n\t}\r\n\t\r\n\tpublic getName(): string {\r\n\t\treturn this.name;\r\n\t}\r\n\t\r\n\tpublic setName(name: string) {\r\n\t\tthis.name = name;\r\n\t}\r\n\t\r\n\t\r\n}","export class Location {\r\n\t\r\n\ttitle: string;\r\n\t\r\n\tconstructor() {\r\n\t\tthis.title = '';\r\n\t}\r\n\t\r\n\tpublic getTitle(): string {\r\n\t\treturn this.title;\r\n\t}\r\n\t\r\n\tpublic setTitle(title: string) {\r\n\t\tthis.title = title;\r\n\t}\r\n\t\r\n\t\r\n}","export class Path {\r\n\t\r\n\tname: string;\r\n\twindow: any;\r\n\tconstructor() {\r\n\t\tthis.name = window.location.pathname;;\r\n\t}\r\n\t\r\n\tpublic getName(): string {\r\n\t\treturn this.name;\r\n\t}\r\n\t\r\n\tpublic setName(name: string) {\r\n\t\t\r\n\t\tthis.name = name;\r\n\t}\r\n}","export class Helper {\r\n\t\t\r\n\tconstructor() {\r\n\t}\r\n\t\r\n\tstatic filter(array: any, path:string) {\r\n\t\tfor(let i=0; i < array.length; i++) {\r\n\t\t\tif(array[i].path == path) {\r\n\t\t\t\treturn array[i];\r\n\t\t\t} /*else {\r\n\t\t\t\tif(window.location.hash.substring(1, window.location.hash.length) == path) {\r\n\t\t\t\t\treturn array[i];\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t}\r\n\t}\r\n\r\n\tstatic hashToControllerName(value: string) {\r\n\t\tlet strValue = '';\r\n\t\tlet upperStrValue = '';\r\n\t\tif(value.charAt(value.length-1) === 's') {\r\n\t\t\tstrValue = value.substring(0, value.length-1) + 'Controller';\r\n\t\t\tupperStrValue = strValue.charAt(0).toUpperCase() + strValue.substring(1, strValue.length);\r\n\t\t} \r\n\t\telse if(value === '') {\r\n\t\t\treturn 'HomeController';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstrValue = value + 'Controller';\r\n\t\t\tupperStrValue = strValue.charAt(0).toUpperCase() + strValue.substring(1, strValue.length);\r\n\t\t}\r\n\t\t\r\n\t\treturn upperStrValue;\r\n\t}\r\n\t\r\n\tstatic xmlToJson(xml: any) {\r\n\t\tvar obj = {};\r\n\t\t\r\n\t\tif(xml.nodeType == 1) {\r\n\t\t\tif(xml.attributes.length > 0) {\r\n\t\t\t\tobj[\"@attributes\"] = {};\r\n\t\t\t\tfor(let j = 0; j < xml.attributes.length; j++) {\r\n\t\t\t\t\tvar attribute = xml.attributes.item(j);\r\n\t\t\t\t\tobj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if(xml.nodeType == 3) {\r\n\t\t\tobj = xml.nodeValue;\r\n\t\t}\r\n\t\t\r\n\t\tvar textNodes = [].slice.call(xml.childNodes).filter((node:any) => {\r\n\t\t\treturn node.nodeType === 3;\r\n\t\t});\r\n\t\t\r\n\t\tif(xml.hasChildNodes() && xml.childNodes.length === textNodes.length) {\r\n\t\t\tobj = [].slice.call(xml.childNodes).reduce((text:string, node:any) => {\r\n\t\t\t\treturn text + node.nodeValue;\r\n\t\t\t}, \"\");\r\n\t\t} else if(xml.hasChildNodes()) {\r\n\t\t\tfor(let i = 0; i < xml.childNodes.length; i++) {\r\n\t\t\t\tvar item = xml.childNodes.item(i);\r\n\t\t\t\tvar nodeName = item.nodeName;\r\n\t\t\t\tif(typeof obj[nodeName] == \"undefined\") {\r\n\t\t\t\t\tobj[nodeName] = this.xmlToJson(item);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(typeof obj[nodeName].push == \"undefined\") {\r\n\t\t\t\t\t\tlet old = obj[nodeName];\r\n\t\t\t\t\t\tobj[nodeName] = [];\r\n\t\t\t\t\t\tobj[nodeName].push(old);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tobj[nodeName].push(this.xmlToJson(item));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n}","//import { Axios } from 'axios';\r\n\r\nexport class HttpProvider {\r\n\t\r\n\tresource: any;\r\n\t\r\n\tconstructor(private config: any) {\r\n\t\tthis.resource = config;\r\n\t}\r\n\t\r\n\tgetAPIUrl(): string {\r\n\t\treturn this.resource.api;\r\n\t}\r\n\t\r\n\tgetApiKey (): string {\r\n      return this.resource.API_KEY;\r\n    }\r\n\t\r\n\tgetCollectionsList (): any {\r\n      return this.getAPIUrl() + '/collections/?apiKey=' + this.resource.API_KEY;\r\n    }\r\n\t\r\n\tqueryString(collection:string, query:string): string {\r\n\t\tif(!query) {\r\n        query = '';\r\n      } else if (query.includes('?')) {\r\n        query = '/' + query;\r\n      } else {\r\n        query = '?' + query;\r\n      }\r\n      //this.resource.collection = collection;\r\n      let queryString = this.getAPIUrl() + '/collections/' + collection + query + 'apiKey=' + this.getApiKey();\r\n      return queryString;\r\n\t}\r\n\t\r\n\tfetch(path:string, options:any, collection?:string): any {\r\n\t\tlet url = this.getAPIUrl() + path;\r\n\t\tlet mheaders = new Headers();\r\n\t\tif(collection != \"\" && collection != undefined) {\r\n\t\t\turl = this.queryString(collection, path);\r\n\t\t\tmheaders.append(\"api-key\", this.getApiKey());\r\n\t\t}\r\n\t\t\r\n\t\tlet init = {\r\n\t\t\tmethod: options.method,\r\n\t\t\theaders: mheaders,\r\n\t\t\tmode: options.mode\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tvar myRequest = new Request(url, init);\r\n\r\n\t\treturn fetch(url, init).then(function(response) {\r\n\t\t  if(response.ok) {\r\n\t\t\t  return response.json();\r\n\t\t  } else {\r\n\t\t\t  throw new Error(\"Request error\");\r\n\t\t  }\r\n\t\t});\r\n\t\t\t}\r\n\t\r\n\trequest(url:string, options:any, path?: string, collection? :string): any {\r\n\t\tif(collection != \"\" && collection != undefined) {\r\n\t\t\turl = this.queryString(collection, path);\r\n\t\t}\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst xhr = new XMLHttpRequest();\r\n\t\t\tif (options.method = 'GET') {\r\n\t\t\t\txhr.open(options.method, url);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\txhr.open(options.method, url, options.body);\r\n\t\t\t}\r\n\t\t\txhr.onload = () => resolve(xhr.responseText);\r\n\t\t\txhr.onerror = () => reject(xhr.statusText);\r\n\t\t\txhr.send();\r\n\t\t  });\r\n\t\t\r\n\t\t/*let url = this.getAPIUrl() + path;\r\n\t\t\r\n\t\tif(collection != \"\" && collection != undefined) {\r\n\t\t\turl = this.queryString(collection, path);\r\n\t\t}\r\n\t\t\r\n\t\treturn new Promise((resolve:any, reject:any) => {\r\n\t\t\tconst xhr = new XMLHttpRequest();\r\n\t\t\t\r\n\t\t\tif (options.method = 'GET') {\r\n\t\t\t\txhr.open(options.method, url);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\txhr.open(options.method, url, options.body);\r\n\t\t\t}\r\n\t\t\txhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n\t\t\txhr.setRequestHeader('Content-Type', 'application/json');\r\n\t\t\txhr.setRequestHeader('lang', 'en');\r\n\t\t\txhr.setRequestHeader('X-Powered-By', 'Express');\r\n\t\t\t\r\n\t\t\tif(this.getApiKey() !== undefined) {\r\n\t\t\t\txhr.setRequestHeader('api-key', this.getApiKey());\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\txhr.onload = () => resolve(xhr.responseText);\r\n\t\t\txhr.onerror = () => reject(xhr.statusText);\r\n\t\t\txhr.send();\r\n\t\t});*/\r\n\t}\r\n\t\r\n\t/*xhr(url:string) {\r\n\t\tvar myHeaders = new Headers();\r\n\t\t//myHeaders.append('lang', localStorage.getItem('lang'));\r\n\t\tvar myInit = { \r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: myHeaders,\r\n\t\t\tmode: 'cors',\r\n\t\t\tcache: 'default' \r\n\t\t};\r\n\t\treturn fetch(url, myInit);\r\n\t}*/\r\n}","import { ApplicationController } from '../application/controller/application';\r\nimport { Layout } from '../application/layout/layout';\r\nimport { RouterProvider } from './router';\r\nimport { Helper } from '../core/util/helper';\r\nexport class PageProvider {\r\n\r\n  cacheTpl: any;\r\n  htmlView: string;\r\n  layoutBuilder: any;\r\n  url: string;\r\n\r\n  constructor(private router: RouterProvider) {\r\n\tthis.htmlView = '';\r\n\tthis.url = window.location.href;\r\n\tthis.layoutBuilder = {};\r\n    this.cacheTpl = router.getCacheTpl();\r\n  }\r\n  \r\n  setCacheTpl(url: string, hashname:string, html: string, callback?: Function, resource?: any) {\r\n    if(url !== '/') {\r\n      this.layoutTemplate(this.cacheTpl['layout\\layout.html'], this.layoutBuilder);\r\n      callback(html, resource, hashname);\r\n    }\r\n    else {\r\n      this.layoutTemplate(html, this.layoutBuilder);\r\n    }\r\n  }\r\n\t\r\n  layoutTemplate(html: string, layoutBuilder: any) {\r\n    this.setHtmlView(html);\r\n\t\r\n\tlet builder = Object.keys(layoutBuilder);\r\n\t\r\n\tif(builder.length > 1) {\r\n\t\tfor(let i=0; i < builder.length; i++) {\r\n\t\t\ttry {\r\n\t\t\t\tlet el = window.document.querySelector('' + layoutBuilder[builder[i]]);\r\n\t\t\t\tel.innerHTML = this.cacheTpl['layout\\\\' + builder[i] + '\\\\' + builder[i] + '.html'];\r\n\t\t\t}\r\n\t\t\tcatch(err) {\r\n\t\t\t\tconsole.log(\"The page doesnt exist at the layout path\", err);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n    // Binding All 'a' tags to event click\r\n    this.bindTagOnClick('a');\r\n  }\r\n  \r\n  getHtmlView(): string {\r\n\treturn this.htmlView;\r\n  }\r\n\r\n  setHtmlView(html: string): void {\r\n    var el = window.document.querySelector('#app');\r\n\tif(!el) {\r\n\t\tconsole.error('Set the id as \"app\" to the div first child element of the body');\r\n\t\treturn;\r\n\t}\r\n    if(html === '' && window.location.pathname !== '') {\r\n      el.innerHTML = '<div><div class=\"spinner\"></div><a href=\"/\">Back To Homepage</a></div>';\r\n\t  this.htmlView = el.innerHTML;\r\n    } else {\r\n      el.innerHTML = html;\r\n\t  this.htmlView = el.innerHTML;\r\n    }\r\n  }\r\n  \r\n  getUrl(): string {\r\n\t  return this.url;\r\n  }\r\n  \r\n  setUrl(url: string) {\r\n\t  this.url = url;\r\n  }\r\n\r\n  getRoute(): RouterProvider {\r\n    return this.router;\r\n  }\r\n\r\n  // @deprecated\r\n  path(url:string): any {\r\n    //return _.find(this.router.getRoutes(), ['path', url]);\r\n  }\r\n\r\n  // @deprecated\r\n  filePath(url: string): string {\r\n    return this.path(url).component;\r\n  }\r\n\r\n  bindTagOnClick(tag: string) {\r\n    let aList = window.document.querySelectorAll(tag);\r\n    for(let i = 0; i < aList.length; i++) {\r\n      aList.item(i).addEventListener('click', (event:any) => {\r\n\t\tlet tag = event.currentTarget.textContent;\r\n\t\twindow.location.assign('http://localhost:5000/#/' + tag)\r\n        ApplicationController.reload(new Layout(this), tag);\r\n\t\t\r\n      });\r\n    }\r\n  }\r\n  \r\n}","import { CacheTpl } from '../../www/view/templates';\r\n\r\nexport class RouterProvider {\r\n  routes: any[];\r\n  templates: any;\r\n  constructor() {\r\n\tthis.routes = [];\r\n    this.templates = CacheTpl.builder();\r\n    console.log(this.templates);\r\n    //this.getRoutes();\r\n  }\r\n\r\n  load (pathDir: string, componentHTMLName: string, templates: any) {\r\n    return pathDir == '' ? templates['layout\\layout.html'] \r\n                      : this.checkingTpl(pathDir, componentHTMLName);\r\n    \r\n  }\r\n  \r\n  setRoutes(route: any) {\r\n\tthis.routes[this.routes.length] = route;\r\n  }\r\n  \r\n  getRoutes(): any[] {\r\n\t  return this.routes;\r\n  }\r\n\r\n  getCacheTpl() {\r\n    return this.templates;\r\n  }\r\n  \r\n  checkingTpl(pathDir: string, componentHTMLName: string) {\r\n\tif(this.templates[pathDir + componentHTMLName.toLowerCase() + '.html'] ) {\r\n\t\tlet value = pathDir + componentHTMLName.toLowerCase() + '.html';\r\n\t\treturn this.templates[value];\r\n\t} else if(this.templates[pathDir + '\\\\' + componentHTMLName.toLowerCase() + '.html']) {\r\n\t\tlet value = pathDir + '\\\\' + componentHTMLName.toLowerCase() + '.html';\r\n\t\treturn this.templates[value];\r\n\t} \r\n\telse {\r\n\t\tthrow new Error(\"The specified template doesn't exist. Add a template before routing.\")\r\n\t}\r\n  }\r\n  \r\n}","import { Layout } from '../lib/application/layout/layout';\r\nimport { ApplicationLayout } from \"../lib/application/layout/application\";\r\n\r\nimport { ApplicationController } from '../lib/application/controller/application';\r\nimport { Helper } from '../lib/core/util/helper';\r\nimport { Resources } from './resources';\r\n\r\nexport class AppController extends ApplicationController implements ApplicationLayout {\r\n  title:any;\r\n  constructor(layout: Layout) {\r\n    super(layout);\r\n  }\r\n\r\n  init() {\r\n\tconsole.log(\"Init methogfdshfd for starting application instance\");\r\n    this.instanceBuilder();\r\n    this.displayLayout(this.getLayout(), window.location.hash, this);\r\n  }\r\n  \r\n  static getInstance() {\r\n\t  return this;\r\n  }\r\n  \r\n  instanceBuilder(): any[] {\r\n\t  console.log(Resources.list(this.getLayout()));\r\n\t  localStorage.setItem('resources', JSON.stringify(Resources.list(this.getLayout())));\r\n\t  \r\n\t  return Resources.list(this.getLayout());\r\n  }\r\n  \r\n  static reload(layout: Layout, hash: string, title?: string) {\r\n    this.prototype.displayLayout(layout, hash, this, title, this.prototype.setTemplate);\r\n  }\r\n\r\n  /*render(template: string, clazz: any) {\r\n    clazz.hash = clazz.getHash(localStorage.getItem('hash'));\r\n    for (let i = 0; i < clazz.instanceBuilder().length; i++) {\r\n      if (clazz.instanceBuilder()[i].constructor.name\r\n              .toLowerCase().indexOf(clazz.hash) === 0) {\r\n        clazz.instanceBuilder()[i].render(template, clazz);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  displayLayout(layout: Layout, hash: string, callback?: Function) {\r\n    let hashName = hash;\r\n    if(hashName === undefined) {\r\n      hashName = window.location.hash || '';\r\n    }\r\n    this.getHash(hashName);\r\n    this.title = document.querySelector('title');\r\n    this.setTitle(hashName);\r\n    let layoutToDisplay:any = layout || this.layout;\r\n    let pathname = this.getPathName(hashName);\r\n    layoutToDisplay.setLayout(pathname, this.title.text, this.render || callback, this);\r\n  }\r\n  \r\n  getResources(): any[] {\r\n\tApplicationController.setResources(Helper.hashToControllerName(ApplicationController.hash.setName(window.location.hash)));\r\n\treturn ApplicationController.getResources();\r\n  }\r\n  \r\n  instanceBuilder(): any[] {\r\n\t  return this.getResources();\r\n  }\r\n\r\n  instanceBuilder(): any[] {\r\n    return [\r\n      new AboutController(),\r\n      new AccountController(),\r\n      new HelloController(),\r\n      new FeedController(),\r\n      new ProfileController(),\r\n      new SettingsController(),\r\n      new LoginController(),\r\n      new RegisterController()\r\n    ]\r\n  }\r\n\r\n  setTitle(hash: string) {\r\n    if(hash === '' || hash === undefined) {\r\n      this.title.text = 'Home';\r\n    }\r\n    else {\r\n      let text = hash.substr(2, hash.length - 1);\r\n      this.title.text = text.replace(text.charAt(0), text.charAt(0).toUpperCase());\r\n    }\r\n  }\r\n\r\n  getPathName(hash: string): string {\r\n    if(hash === 'register' || hash === 'login') {\r\n      return hash;\r\n    }\r\n    else {\r\n      return window.location.pathname + hash.substr(2, hash.length - 1);\r\n    }\r\n  }\r\n\r\n  getHash(hash: string): string {\r\n    if(hash.includes('login')) {\r\n      hash = 'login';\r\n    } else if(hash.includes('register')) {\r\n      hash = 'register';\r\n    } else {\r\n      return hash.substr(2, hash.length - 1)\r\n    }\r\n    return hash;\r\n  }\r\n\r\n  static reload(layout: Layout, hash: string) {\r\n    this.prototype.displayLayout(layout, hash, this.prototype.render);\r\n  }*/\r\n}","import { Layout } from '../lib/application/layout/layout';\r\nimport { AppController } from './application.controller';\r\n\r\nexport class Application {\r\n\t\r\n  constructor(private layout: Layout) {\r\n  }\r\n\r\n  start(appController: AppController) {\r\n\ttry {\r\n\t\tappController.init();\r\n\t\tconsole.log('App started! Welcome to Waza.');\r\n\t\treturn this;\r\n\t} catch(err) {\r\n\t\tconsole.error('Error starting application!', err);\r\n\t}\r\n  }\r\n}","export class Constants {\n\t\n\t\n\t\n\tstatic getConfig() {\n\t\treturn {\n\t\t  api: 'http://localhost:4000',\n\t\t  WAZA_CONFIG: {\n\t\t\tAPI_KEY:'zd-e9-XFv8mB5neQWveNdlSQ43Cv_QRT',\n\t\t\tDB_NAME:'starter-kit'\n\t\t  },\n\t\t  keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t\t  jwtKey: '',\n\t\t  appName: 'Wazajs demo',\n\t\t};\n\t}\n}\n\n","import { HomeService } from './home.service';\nimport { Home } from './home';\nimport { AppController } from '../application.controller';\nimport { ApplicationController } from \"../../lib/application/controller/application\";\nimport { Layout } from '../../lib/application/layout/layout';\nimport { ApplicationLayout } from \"../../lib/application/layout/application\";\n\nexport class HomeController extends ApplicationController implements ApplicationLayout {\n\n  Service: HomeService;\n  \n\n  constructor(layout: Layout) {\n\t  super(layout)\n    this.Service = new HomeService();\n\tthis.location.title = 'Home page';\n\tthis.hash.name = 'home';\n  }\n\n  findById(id: string): Home {\n    return this.Service.findById(id);\n  }\n\n  create(item: Home): void {\n    this.Service.create(item);\n  }\n\n  findAll(): Promise<Home> {\n    return this.Service.findAll();\n  }\n\n  update(id: string): Home {\n    return this.Service.update(id);\n  }\n\n  delete(id: string): void {\n    return this.Service.delete(id);\n  }\n  \n  render(template: string, type: any) {\n    var contentEl = window.document.querySelector('.ui-view');\n    contentEl.innerHTML = template;\n  }\n}\n","import { HomeRepository } from \"./home.repository\";\nimport { Home } from './home';\n\nexport class HomeService implements HomeRepository<Home> {\n  constructor() {\n  }\n  \n  findById(id: string): Home {\n    return;\n  }\n\n  create(item: Home): Home {\n    return;\n  }\n\n  findAll(): Promise<Home> {\n    return;\n  }\n\n  update(id: string): Home {\n    return;\n  }\n\n  delete(id: string): void {\n    return;\n  }\n  \n}","\nimport { Application } from './application';\nimport { PageProvider } from '../lib/provider/page';\nimport { Router } from './router';\nimport { Layout } from '../lib/application/layout/layout';\nimport { ApplicationController } from '../lib/application/controller/application';\nimport { AppController } from './application.controller';\n//import { CacheTpl } from './core/templates';\n\nwindow.onload = () => {\n  let router = new Router();\n  let layout = new Layout(new PageProvider(router));\n  let app = new Application(layout);\n  let appCtrl = new AppController(layout);\n  app.start(appCtrl);\n}\n","import { Pack } from './pack';\nimport { ApplicationController } from \"../../lib/application/controller/application\";\nimport { Layout } from '../../lib/application/layout/layout';\nimport { PackService } from './pack.service';\nimport { AppController } from '../application.controller';\nimport { ApplicationLayout } from \"../../lib/application/layout/application\";\nimport { HttpProvider } from '../../lib/provider/http';\nimport { Constants } from '../constants';\n\nexport class PackController extends ApplicationController implements ApplicationLayout {\n\n  static service: PackService;\n\n  constructor(layout: Layout) {\n\t  super(layout)\n    PackController.service = new PackService(new HttpProvider(Constants.getConfig()));\n\tthis.location.title = 'Pack page';\n\tthis.hash.name = 'pack';\n  }\n\n  static findById(id: string): any {\n    return PackController.service.findById(id);\n  }\n\n  static create(item: Pack): any {\n    return PackController.service.create(item);\n  }\n\n  static findAll(): Promise<any> {\n    var resp:any = PackController.service.findAll();\n\tconsole.log(resp);\n\treturn resp;\n  }\n\n  static update(id: string): Pack {\n    return PackController.service.update(id);\n  }\n\n  static delete(id: string): void {\n    return PackController.service.delete(id);\n  }\n  \n  render(template: string, type: any) {\n    var contentEl = window.document.querySelector('.ui-view');\n    contentEl.innerHTML = template;\n  }\n}\n","import { PackRepository } from \"./pack.repository\";\nimport { Pack } from './pack';\nimport { HttpProvider } from '../../lib/provider/http';\n\nexport class PackService implements PackRepository<Pack> {\n\t  \n  \n  constructor(private http: HttpProvider) {\n  }\n  \n  findById(id: string): any {\n\tlet path = '/packs/' + id;\n\tlet options = {\n\t\tmethod: 'GET',\n\t\tmode: 'cors', // no-cors, cors, *same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin' // include, *same-origin, omit\n\t}\n    return this.http.request(path, options) \n\t.then((res: any) => {\n\t\t\n\t\t\treturn res;\n\t\t}\n\t);\n\t\n  }\n\n  create(item: Pack): any {\n    return;\n  }\n\n  findAll(): Promise<any> {\n    let path = this.http.getAPIUrl() + '/packs/list';\n\t\n\tlet mheaders = new Headers();\n\t\t\n\tmheaders.append(\"Content-Type\", \"application/json\");\n\tmheaders.append(\"lang\", \"en\");\n\tmheaders.append(\"Access-Control-Allow-Origin\", \"*\");\n\tmheaders.append(\"Content-Type\", \"application/json; charset=utf8\");\n\tmheaders.append(\"Connection\", \"keep-alive\");\n\tmheaders.append(\"Cache-Control\", \"no-cache\");\n\tmheaders.append(\"X-Powered-By\", \"Express\");\n\t\n\tlet options = {\n\t\tmethod: 'GET',\n\t\tmode: 'cors', // no-cors, cors, *same-origin\n        credentials: 'include' // include, *same-origin, omit\n\t}\n\t\n\tlet init = {\n\t\t\tmethod: options.method,\n\t\t\theaders: mheaders,\n\t\t\tmode: options.mode,\n\t\t\tcredentials: options.credentials\n\t}\n\t\n    return this.http.request(path, init) \n\t.then((response: any) => {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t  resolve(response);\n\t\t\t\t}, 2000);\n\t\t  });\n\t\t}\n\t);\n  }\n\n  update(id: string): any {\n    return;\n  }\n\n  delete(id: string): void {\n    return;\n  }\n  \n}","import { HomeController } from './home/home.controller';\r\nimport { PackController } from './pack/pack.controller';\r\nimport { AppController } from './application.controller';\r\nimport { Layout } from '../lib/application/layout/layout';\r\nexport class Resources {\r\n  \r\n  \r\n  static list(layout: Layout): any[] {\r\n\treturn [\r\n      new HomeController(layout),\r\n\t  new PackController(layout)\r\n    ]\r\n  }\r\n\r\n  \r\n  \r\n}","import { CacheTpl } from './view/templates';\r\nimport { RouterProvider } from '../lib/provider/router';\r\nimport { PackController } from './pack/pack.controller';\r\n\r\nexport class Router extends RouterProvider {\r\n  routes: any[];\r\n  templates: any;\r\n  constructor() {\r\n\tsuper();\r\n    this.templates = CacheTpl.builder();\r\n    console.log(this.templates);\r\n    this.getRoutes();\r\n\t\r\n  }\r\n  \r\n  getRoutes(): any[] {\r\n    return this.routes = [\r\n      { path: '/', component: this.load('', '', this.templates) }, // Default\r\n      { path: '/home', component: this.load('home', 'Home', this.templates) },\r\n\t  { path: '/pack/list', component: this.load('pack', 'List', this.templates), handler: PackController.findAll },\r\n\t  { path: '/pack/create', component: this.load('pack', 'Create', this.templates), handler: PackController.create },\r\n\t  { path: '/pack/update/:ref_pack', component: this.load('pack', 'Edit', this.templates), handler: PackController.update },\r\n\t  { path: '/pack/:ref_pack', component: this.load('pack', 'Pack', this.templates), handler: PackController.findById }\r\n    ]\r\n  }\r\n\r\n  \r\n  \r\n}","export class CacheTpl {\n    static builder(){\n    let caches = {}; \n    caches['home\\home.html'] = '<div id=\"home\">\\n  <h1>Home</h1>\\n</div>\\n';\n    caches['layout\\layout.html'] = '<div id=\"layout\">\\n  <nav class=\"navbar navbar-default navbar-fixed-top\"></nav>\\n  <div id=\"container\">\\n      <div class=\"row\">\\n          <div class=\"col-md-3\">\\n              <div class=\"sidenav\"></div>\\n          </div>\\n          <div class=\"col-md-7\">\\n            <div class=\"row\">\\n                <header></header>\\n            </div>\\n            <div class=\"row\">\\n                <div class=\"ui-view\">\\n                  Hello world, Wazajs demo routing! <a href=\"#/home\">home</a>&nbsp;<a href=\"#/pack/list\">list packs</a>&nbsp;<a href=\"#/pack/436576245\">ref_pack : 436576245</a>\\n\t\t\t\t  &nbsp;<a href=\"#/pack/update/436576245\">update</a>\\n                </div>\\n            </div>\\n          </div>\\n      </div>  \\n      <br><br>\\n      <div id=\"footer\">@Copyright Mard : company behind Wazajs</div>\\n  </div>\\n</div>';\n    caches['pack\\create.html'] = '<div id=\"create\">\\n  <h1>Create Pack</h1>\\n</div>';\n    caches['pack\\edit.html'] = '<div id=\"edit\">\\n  <h1>Edit Pack</h1>\\n</div>';\n    caches['pack\\list.html'] = '<div id=\"list\">\\n  <h1>Pack List</h1>\\n</div>';\n    caches['pack\\pack.html'] = '<div id=\"pack\">\\n  <h1>Pack</h1>\\n</div>\\n';\n  return caches;\n   }\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}